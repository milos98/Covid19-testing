{"version":3,"sources":["./src/app/components/authentication/register/register.component.ts","./src/app/components/authentication/register/register.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/authentication/login/login.component.ts","./src/app/components/authentication/login/login.component.html","./src/app/app.module.ts","./src/app/components/authentication/authentication.component.ts","./src/app/components/authentication/authentication.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../../services/auth.service';\nimport {User} from '../../../interfaces/user';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  failed = false;\n  message!: string;\n  registerForm!: FormGroup;\n  genders: string[] = ['Male', 'Female'];\n\n  constructor(private router: Router, private authService: AuthService, private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name: new FormGroup({\n        firstName: new FormControl(null, Validators.required),\n        lastName: new FormControl(null, Validators.required)\n      }),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      gender: new FormControl(null, Validators.required)\n    });\n  }\n\n  goToLogin(): void {\n    this.router.navigate(['/login']);\n  }\n\n  onSubmit(): void {\n    const user: User = this.registerForm.value;\n    console.log(user);\n    this.authService.registerUser(user).subscribe(\n      data => {\n        if (data.success) {\n          this.failed = false;\n          this.snackBar.open('Registration successful', 'Log in',{\n            horizontalPosition: 'end',\n            verticalPosition: 'bottom'\n          }).onAction().subscribe(snack => this.goToLogin());\n        } else {\n          this.failed = true;\n          this.message = data.message;\n        }\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h2>Register</h2>\n  <p\n    *ngIf=\"!registerForm.valid\"\n    class=\"help-block-danger rounded-corners\"\n    >Please enter all info!\n  </p>\n  <p\n    *ngIf=\"failed\"\n    class=\"help-block-danger rounded-corners\"\n  >{{ message }}\n  </p>\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\" formGroupName=\"name\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input\n          class=\"rounded-corners\"\n          type=\"text\"\n          name=\"fname\"\n          id=\"name\"\n          formControlName=\"firstName\"\n        >\n      </div>\n      <div class=\"form-group\">\n        <label for=\"surname\">Surname:</label>\n        <input\n          class=\"rounded-corners\"\n          type=\"text\"\n          name=\"lname\"\n          id=\"surname\"\n          formControlName=\"lastName\"\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">E-mail:</label>\n      <input\n        class=\"rounded-corners\"\n        type=\"text\"\n        name=\"email\"\n        id=\"email\"\n        formControlName=\"email\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input\n        class=\"rounded-corners\"\n        type=\"text\"\n        name=\"username\"\n        id=\"username\"\n        formControlName=\"username\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input\n        class=\"rounded-corners\"\n        type=\"password\"\n        name=\"password\"\n        id=\"password\"\n        formControlName=\"password\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gender\">Gender:</label>\n      <select\n        class=\"rounded-corners\"\n        type=\"text\"\n        name=\"gender\"\n        id=\"gender\"\n        formControlName=\"gender\"\n      >\n        <option\n          *ngFor=\"let gender of genders\"\n          [value]=\"gender\"\n          >{{gender}}\n        </option>\n      </select>\n      <p>Already have an account? <span class=\"primary\" (click)=\"goToLogin()\">Yuo can login here</span>!</p>\n    </div>\n    <button\n      class=\"rounded-corners\"\n      type=\"submit\"\n      [disabled]=\"!registerForm.valid\"\n    >Register\n    </button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { AuthService} from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [AuthService]\n})\nexport class AppComponent {\n  title = 'Covid-19 IS';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  failed = false;\n  message!: string;\n  loginForm!: FormGroup;\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n\n  goToRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  onSubmit(): any {\n    this.authService.authenticateUser(this.loginForm.value).subscribe(\n      data => {\n        if (data.success) {\n          this.failed = false;\n          this.authService.storeUserData(data.token, data.user);\n        } else {\n          this.failed = true;\n          this.message = data.message;\n        }\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n  <h2>Login</h2>\n  <p\n    *ngIf=\"failed\"\n    class=\"help-block-danger rounded-corners\"\n    >{{ message }}\n  </p>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input\n        class=\"rounded-corners\"\n        type=\"text\"\n        name=\"username\"\n        id=\"username\"\n        formControlName=\"username\"\n      >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input\n        class=\"rounded-corners\"\n        type=\"password\"\n        name=\"password\"\n        id=\"password\"\n        formControlName=\"password\"\n      >\n      <p>Don't have account? <span class=\"primary\" (click)=\"goToRegister()\">Yuo can create</span> one here for free!</p>\n    </div>\n    <button\n      class=\"rounded-corners\"\n      type=\"submit\"\n      [disabled]=\"!loginForm.valid\"\n    >Login\n    </button>\n  </form>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatSnackBar, MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { LoginComponent } from './components/authentication/login/login.component';\nimport { RegisterComponent } from './components/authentication/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthenticationComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})\nexport class AuthenticationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"picture\"></div>\n  <div class=\"router\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {User} from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  serverUrl = 'http://localhost:3000';\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {  }\n\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  registerUser(user: User): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.serverUrl + '/users/register', user, httpOptions);\n  }\n\n  authenticateUser(credentials: any): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(this.serverUrl + '/users/authenticate', credentials, httpOptions);\n  }\n\n  storeUserData(token: any, user: User): void {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(): void {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {LoginComponent} from './components/authentication/login/login.component';\nimport {AuthenticationComponent} from './components/authentication/authentication.component';\nimport {RegisterComponent} from './components/authentication/register/register.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {\n    path: '', component: AuthenticationComponent, children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}